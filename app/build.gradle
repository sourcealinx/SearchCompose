plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.alinx.searchcompose"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.4.32'
    }

    flavorDimensions "v"

    productFlavors {
        sit {
            dimension "v"
        }

        uat {
            dimension "v"
        }

        product {
            dimension "v"
        }
    }

    applicationVariants.all { variant ->
        // 打包完成后复制到的目录
        def outputFileDir = "${project.projectDir.absolutePath}/${variant.buildType.name}"
        //确定输出文件名
        def apkName = "app"
        if (variant.flavorName == "sit") {
            apkName = "${apkName}-sit-${variant.versionName}"
        } else if (variant.flavorName == "uat") {
            apkName = "${apkName}-uat-${variant.versionName}"
        }
        apkName = "${apkName}.apk"
        variant.outputs.forEach {
            it.outputFileName = apkName
        }
        // 打包完成后做的一些事,复制apk到指定文件夹,复制mapping等
        variant.getAssembleProvider().get().doLast {
            File out = new File(outputFileDir)
            variant.outputs.forEach { file ->
                copy {
                    from file.outputFile
                    into out
                }
            }
//            if (variant.buildType.name.contains("release")) {
//                copy {
//                    from variant.getMappingFileProvider()
//                    into out
//                    rename {
//                        String fileName -> "mapping-${variant.flavorName}-${variant.versionName}.txt"
//                    }
//                }
//            }
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.0-alpha06'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}